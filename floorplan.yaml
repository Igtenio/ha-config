      name: Demo Floorplan
      image: /local/custom_ui/floorplan/floorplan.svg
      stylesheet: /local/custom_ui/floorplan/floorplan.css

      # These options are optional
      warnings:                  # enable warnings (to find out why things might ot be working correctly)
      # pan_zoom:                  # enable experimental panning / zooming
      # hide_app_toolbar:          # hide the application toolbar (when used as a custom panel)
      # date_format: DD-MMM-YYYY   # Date format to use in hover-over text

      last_motion_entity: sensor.template_last_motion
      last_motion_class: last-motion

      groups:

        - name: Lights
          entities:
             - light.hallway
             - light.living_room
             - light.dining_room
             - light.kitchen
             - light.bedroom
             - light.bathroom
          states:
            - state: 'on'
              class: 'light-on'
            - state: 'off'
              class: 'light-off'
          action:
            domain: homeassistant
            service: toggle

        - name: Binary sensors
          entities:
            - binary_sensor.front_door_status
            - binary_sensor.bathroom_motion
          states:
            - state: 'off'
              class: 'info-background'
            - state: 'on'
              class: 'warning-background'
          state_transitions:
            - name: On to off
              from_state: 'on'
              to_state: 'off'
              duration: 10

        - name: Temperature Sensors
          entities:
            - sensor.front_door_temp
            - sensor.bathroom_temp
          text_template: '${entity.state ? entity.state : "undefined"}'

# The above text_template uses extended attributes from the climate.* objects to get current temperature.
#
#        - name: text_states
#          entities:
#            - sensor.downstairs_thermostat_humidity
#            - sensor.dark_sky_temperature
#            - sensor.last_message
#          text_template: '${entity.state ? entity.state.replace(/\s{2,}/g,"") : "undefined"}'
#
# The above text_template uses jQuery syntax to search and replace any instance of 2 consecutive (or more) spaces in a string of text.